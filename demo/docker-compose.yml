version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: reactive-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: reactive_demo
    volumes:
      - mongodb_data:/data/db
    networks:
      - reactive-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: reactive-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - reactive-network

  # Kafka (KRaft mode - no Zookeeper needed)
  kafka:
    image: apache/kafka:latest
    container_name: reactive-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - reactive-network

  # Spring Boot Application (optional - uncomment to run in Docker)
  # app:
  #   build: ./demo
  #   container_name: reactive-app
  #   ports:
  #     - "9090:9090"
  #   environment:
  #     - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/reactive_demo?authSource=admin
  #     - SPRING_REDIS_HOST=redis
  #     - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  #   depends_on:
  #     - mongodb
  #     - redis
  #     - kafka
  #   networks:
  #     - reactive-network

volumes:
  mongodb_data:
  redis_data:
  kafka_data:

networks:
  reactive-network:
    driver: bridge
